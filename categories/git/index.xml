<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on Jqtmviyu's Blog</title><link>/categories/git/</link><description>Recent content in git on Jqtmviyu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 27 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>git删除所有历史提交记录</title><link>/posts/202002/27.delete-all-gitcommit/</link><pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate><guid>/posts/202002/27.delete-all-gitcommit/</guid><description>​ 在切换Hexo到Hugo的过程中，由于有很多误操作造成提交记录很难看，需要清空历史提交记录。
切换到新的分支。
git checkout --orphan latest_branch 缓存所有的文件（除了.gitignore中声明排除的）
git add -A 提交跟踪过的文件。
git commit -m &amp;#34;提交记录&amp;#34; 删除master分支。
git branch -D master 重命名当前分支为master。
git branch -m master 提交到远程master分支。
git push -f origin master</description></item><item><title>git笔记</title><link>/posts/201711/13.git-note/</link><pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate><guid>/posts/201711/13.git-note/</guid><description>通过git int把目录变成Git可以管理的仓库。 所有的版本管理系统，其实只能跟踪文本文件的改动，比如txt、网页、程序代码等。 强烈建议使用标准的utf-8编码，不要用windows自带的记事本编辑任何文本，要用utf-8 without BOM。 一.创建版本库 1.1.创建空目录 mkdir 目录名 //新建目录 cd 目录名 pwd //显示当前目录路径 1.2.把目录变成Git可以管理的仓库 git init 会看到该目录下生成.git的目录
1.3.把文件添加到仓库 git add &amp;lt;file&amp;gt; 可反复多次使用，添加多个文件
1.4.把文件提交到仓库 git commit -m &amp;#34;xxx&amp;#34; -m &amp;ldquo;xxx&amp;quot;本次提交的说明，commit可以一次提交很多文件。
二.时空穿梭 查看仓库当前状态
git status
查看具体修改内容
git diff 要查看的文件
diff就是difference的缩写。
2.1.版本回退 2.1.1.命令查看提交日志 git log 退出按 Q 觉得输出信息太多，可以加参数
git log --pretty=oneline 一大串xxxxxxxxxxx是commin id（版本号）。HEAD是当前版本；HEAD^是上一版本；HEAD^^是上上版本；上100版本，用HEAD~100。 查看文件版本
cat 文件 2.1.2.版本回退 用git reset
git reset --hard HEAD^ 回退到上一版本。同时会修改工作区的文件。</description></item></channel></rss>